//
// FX Version: fx_5_0
//
// 3 local buffer(s)
//
cbuffer cbPerFrame
{
    DirectionalLight gDirLights[3];     // Offset:    0, size:  192
    float3  gEyePosW;                   // Offset:  192, size:   12
    float   gFogStart;                  // Offset:  204, size:    4
    float   gFogRange;                  // Offset:  208, size:    4
    float   gFogColor;                  // Offset:  212, size:    4
}

cbuffer cbPerObject
{
    float4x4 gViewProj;                 // Offset:    0, size:   64
    Material gMaterial;                 // Offset:   64, size:   64
}

cbuffer cbFixed
{
    float2  gTexC[4] = { 0, 1, 0, 0, 1, 1, 1, 0 };// Offset:    0, size:   56
}

//
// 2 local object(s)
//
Texture2DArray gTreeMapArray;
SamplerState linearSampling
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 3 technique(s)
    //
    technique11 Light3
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // SIZE                     0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // SIZE                     0   xy          1     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_output o0.xyz
                dcl_output o1.xy
                dcl_temps 2
                
                #line 63 "C:\Workspace\GitHub\render_demos\RenderEngine2\FX\Billboard.fx"
                mov r0.xyz, v0.xyzx  // vout<0,1,2>
                mov r1.xy, v1.xyxx  // vout<3,4>
                mov o0.xyz, r0.xyzx  // VS<0,1,2>
                mov o1.xy, r1.xyxx  // VS<3,4>
                ret 
                // Approximately 5 instruction slots used
                            
            };
            GeometryShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192 [unused]
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float gFogColor;                   // Offset:  212 Size:     4 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gViewProj;                // Offset:    0 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:   64
                //       float4 Diffuse;                // Offset:   80
                //       float4 Specular;               // Offset:   96
                //       float4 Reflect;                // Offset:  112
                //
                //   } gMaterial;                       // Offset:   64 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbFixed
                // {
                //
                //   float2 gTexC[4];                   // Offset:    0 Size:    56
                //      = 0x00000000 0x3f800000 0x00000000 0x00000000 
                //        0x00000000 0x00000000 0x00000000 0x00000000 
                //        0x3f800000 0x3f800000 0x00000000 0x00000000 
                //        0x3f800000 0x00000000 
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                // cbFixed                           cbuffer      NA          NA    2        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // SIZE                     0   xy          1     NONE  float   xy  
                // SV_PrimitiveID           0    N/A   primID   PRIMID   uint    YES
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // m0:SV_POSITION           0   xyzw        0      POS  float   xyzw
                // m0:POSITION              0   xyz         1     NONE  float   xyz 
                // m0:NORMAL                0   xyz         2     NONE  float   xyz 
                // m0:TEXCOORD              0   xy          3     NONE  float   xy  
                // m0:SV_PrimitiveID        0   x           4   PRIMID   uint   x   
                //
                gs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[4], immediateIndexed
                dcl_constantbuffer cb2[4], immediateIndexed
                dcl_input v[1][0].xyz
                dcl_input v[1][1].xy
                dcl_input vPrim
                dcl_temps 7
                dcl_inputprimitive point 
                dcl_stream m0
                dcl_outputtopology trianglestrip 
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output_sgv o4.x, primitive_id
                dcl_maxout 4
                
                #line 74 "C:\Workspace\GitHub\render_demos\RenderEngine2\FX\Billboard.fx"
                mov r0.xy, -v[0][0].xzxx
                add r0.xz, r0.xxyx, cb0[12].xxzx  // look<0:Inf,2:Inf>
                mov r0.y, l(0)  // look<1: 0f>
                dp3 r0.w, r0.xyzx, r0.xyzx
                rsq r0.w, r0.w
                mul r0.xyz, r0.wwww, r0.xyzx  // look<0:NaN:Inf,1: 0f,2:NaN:Inf>
                mul r1.xyz, r0.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000)
                mul r2.xyz, r0.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
                mov r2.xyz, -r2.xyzx
                add r1.xyz, r1.xyzx, r2.xyzx  // right<0:NaN:Inf,1: 0f,2:NaN:Inf>
                mul r2.xyz, l(0.500000, 0.500000, 0.500000, 0.000000), v[0][1].xxxx  // halfWidth<0:[-1.70141e+038f,1.70141e+038f],1:[-1.70141e+038f,1.70141e+038f],2:[-1.70141e+038f,1.70141e+038f]>
                mul r3.xyz, l(0.500000, 0.500000, 0.500000, 0.000000), v[0][1].yyyy  // halfHeight<0:[-1.70141e+038f,1.70141e+038f],1:[-1.70141e+038f,1.70141e+038f],2:[-1.70141e+038f,1.70141e+038f]>
                
                #line 86
                mul r1.xyz, r1.xyzx, r2.xyzx
                add r2.xyz, r1.xyzx, v[0][0].xyzx
                mul r3.xyz, r3.xyzx, l(0.000000, 1.000000, 0.000000, 0.000000)
                mov r4.xyz, -r3.xyzx
                add r5.xyz, r2.xyzx, r4.xyzx
                add r2.xyz, r2.xyzx, r3.xyzx
                mov r1.xyz, -r1.xyzx
                add r1.xyz, r1.xyzx, v[0][0].xyzx
                add r4.xyz, r4.xyzx, r1.xyzx
                add r1.xyz, r3.xyzx, r1.xyzx
                
                #line 97
                mov r5.w, l(1.000000)
                dp4 r3.x, r5.xyzw, cb1[0].xyzw  // gout<0:NaN:Inf>
                dp4 r3.y, r5.xyzw, cb1[1].xyzw  // gout<1:NaN:Inf>
                dp4 r3.z, r5.xyzw, cb1[2].xyzw  // gout<2:NaN:Inf>
                dp4 r3.w, r5.xyzw, cb1[3].xyzw  // gout<3:NaN:Inf>
                mov r5.xyz, r3.xyzx  // gout<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov r0.xyz, r0.xyzx  // gout<7:NaN:Inf,8: -0f,9:NaN:Inf>
                mov r6.xy, cb2[0].xyxx  // gout<10,11>
                mov r0.w, vPrim  // gout<12>
                mov o0.xyzw, r3.xyzw  // triStream<0,0,0,0>
                mov o1.xyz, r5.xyzx  // triStream<0,0,0>
                mov o2.xyz, r0.xyzx  // triStream<0,0,0>
                mov o3.xy, r6.xyxx  // triStream<0,0>
                mov o4.x, r0.w  // triStream<0>
                emit_stream m0
                
                #line 97
                mov r2.w, l(1.000000)
                dp4 r3.x, r2.xyzw, cb1[0].xyzw  // gout<0:NaN:Inf>
                dp4 r3.y, r2.xyzw, cb1[1].xyzw  // gout<1:NaN:Inf>
                dp4 r3.z, r2.xyzw, cb1[2].xyzw  // gout<2:NaN:Inf>
                dp4 r3.w, r2.xyzw, cb1[3].xyzw  // gout<3:NaN:Inf>
                mov r2.xyz, r3.xyzx  // gout<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov r5.xy, cb2[1].xyxx  // gout<10,11>
                
                #line 103
                mov o0.xyzw, r3.xyzw  // triStream<0,0,0,0>
                mov o1.xyz, r2.xyzx  // triStream<0,0,0>
                mov o2.xyz, r0.xyzx  // triStream<0,0,0>
                mov o3.xy, r5.xyxx  // triStream<0,0>
                mov o4.x, r0.w  // triStream<0>
                emit_stream m0
                
                #line 97
                mov r4.w, l(1.000000)
                dp4 r2.x, r4.xyzw, cb1[0].xyzw  // gout<0:NaN:Inf>
                dp4 r2.y, r4.xyzw, cb1[1].xyzw  // gout<1:NaN:Inf>
                dp4 r2.z, r4.xyzw, cb1[2].xyzw  // gout<2:NaN:Inf>
                dp4 r2.w, r4.xyzw, cb1[3].xyzw  // gout<3:NaN:Inf>
                mov r3.xyz, r2.xyzx  // gout<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov r4.xy, cb2[2].xyxx  // gout<10,11>
                
                #line 103
                mov o0.xyzw, r2.xyzw  // triStream<0,0,0,0>
                mov o1.xyz, r3.xyzx  // triStream<0,0,0>
                mov o2.xyz, r0.xyzx  // triStream<0,0,0>
                mov o3.xy, r4.xyxx  // triStream<0,0>
                mov o4.x, r0.w  // triStream<0>
                emit_stream m0
                
                #line 97
                mov r1.w, l(1.000000)
                dp4 r2.x, r1.xyzw, cb1[0].xyzw  // gout<0:NaN:Inf>
                dp4 r2.y, r1.xyzw, cb1[1].xyzw  // gout<1:NaN:Inf>
                dp4 r2.z, r1.xyzw, cb1[2].xyzw  // gout<2:NaN:Inf>
                dp4 r2.w, r1.xyzw, cb1[3].xyzw  // gout<3:NaN:Inf>
                mov r1.xyz, r2.xyzx  // gout<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov r3.xy, cb2[3].xyxx  // gout<10,11>
                
                #line 103
                mov o0.xyzw, r2.xyzw  // triStream<0,0,0,0>
                mov o1.xyz, r1.xyzx  // triStream<0,0,0>
                mov o2.xyz, r0.xyzx  // triStream<0,0,0>
                mov o3.xy, r3.xyxx  // triStream<0,0>
                mov o4.x, r0.w  // triStream<0>
                emit_stream m0
                
                #line 70
                ret 
                // Approximately 77 instruction slots used
                            
            };
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float gFogColor;                   // Offset:  212 Size:     4 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gViewProj;                // Offset:    0 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:   64
                //       float4 Diffuse;                // Offset:   80
                //       float4 Specular;               // Offset:   96
                //       float4 Reflect;                // Offset:  112
                //
                //   } gMaterial;                       // Offset:   64 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                // SV_PrimitiveID           0   x           4   PRIMID   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[7], immediateIndexed
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_output o0.xyzw
                dcl_temps 13
                
                #line 115 "C:\Workspace\GitHub\render_demos\RenderEngine2\FX\Billboard.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 153
                nop 
                mov r2.xyzw, cb1[4].xyzw  // mat<0,1,2,3>
                mov r3.xyzw, cb1[5].xyzw  // mat<4,5,6,7>
                mov r4.xyzw, cb1[6].xyzw  // mat<8,9,10,11>
                mov r5.xyzw, cb0[0].xyzw  // L<0,1,2,3>
                mov r6.xyzw, cb0[1].xyzw  // L<4,5,6,7>
                mov r7.xyzw, cb0[2].xyzw  // L<8,9,10,11>
                mov r8.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r8.xyz, -r8.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r5.xyzw, r2.xyzw, r5.xyzw  // ambient<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 78
                dp3 r0.w, r8.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r8.xyz, -r8.xyzx
                dp3 r8.w, r8.xyzx, r0.xyzx
                add r8.w, r8.w, r8.w
                mov r8.w, -r8.w
                mul r9.xyz, r0.xyzx, r8.wwww
                add r8.xyz, r8.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r8.x, r8.xyzx, r1.xyzx
                max r8.x, r8.x, l(0.000000)
                log r8.x, r8.x
                mul r8.x, r4.w, r8.x
                exp r8.x, r8.x  // specFactor<0:NaN:Inf>
                mul r9.xyzw, r3.xyzw, r0.wwww
                mul r6.xyzw, r6.xyzw, r9.xyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mul r8.xyzw, r4.xyzw, r8.xxxx
                mul r7.xyzw, r7.xyzw, r8.xyzw  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 82
                movc r6.xyzw, r1.wwww, r6.xyzw, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                movc r7.xyzw, r1.wwww, r7.xyzw, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 153 "C:\Workspace\GitHub\render_demos\RenderEngine2\FX\Billboard.fx"
                mov r5.xyzw, r5.xyzw  // A<0:Inf,1:Inf,2:Inf,3:Inf>
                mov r6.xyzw, r6.xyzw  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r7.xyzw, r7.xyzw  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 156
                add r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf,3:Inf>
                add r6.xyzw, r6.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r7.xyzw, r7.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 153
                nop 
                mov r8.xyzw, cb0[4].xyzw  // L<0,1,2,3>
                mov r9.xyzw, cb0[5].xyzw  // L<4,5,6,7>
                mov r10.xyzw, cb0[6].xyzw  // L<8,9,10,11>
                mov r11.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r11.xyz, -r11.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r8.xyzw, r2.xyzw, r8.xyzw  // ambient<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 78
                dp3 r0.w, r11.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r11.xyz, -r11.xyzx
                dp3 r11.w, r11.xyzx, r0.xyzx
                add r11.w, r11.w, r11.w
                mov r11.w, -r11.w
                mul r12.xyz, r0.xyzx, r11.wwww
                add r11.xyz, r11.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r11.x, r11.xyzx, r1.xyzx
                max r11.x, r11.x, l(0.000000)
                log r11.x, r11.x
                mul r11.x, r4.w, r11.x
                exp r11.x, r11.x  // specFactor<0:NaN:Inf>
                mul r12.xyzw, r3.xyzw, r0.wwww
                mul r9.xyzw, r9.xyzw, r12.xyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mul r11.xyzw, r4.xyzw, r11.xxxx
                mul r10.xyzw, r10.xyzw, r11.xyzw  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 82
                movc r9.xyzw, r1.wwww, r9.xyzw, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                movc r10.xyzw, r1.wwww, r10.xyzw, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 153 "C:\Workspace\GitHub\render_demos\RenderEngine2\FX\Billboard.fx"
                mov r8.xyzw, r8.xyzw  // A<0:Inf,1:Inf,2:Inf,3:Inf>
                mov r9.xyzw, r9.xyzw  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r10.xyzw, r10.xyzw  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 156
                add r5.xyzw, r5.xyzw, r8.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r6.xyzw, r6.xyzw, r9.xyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r7.xyzw, r7.xyzw, r10.xyzw  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 153
                nop 
                mov r8.xyzw, cb0[8].xyzw  // L<0,1,2,3>
                mov r9.xyzw, cb0[9].xyzw  // L<4,5,6,7>
                mov r10.xyzw, cb0[10].xyzw  // L<8,9,10,11>
                mov r11.xyz, cb0[11].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r11.xyz, -r11.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r2.xyzw, r2.xyzw, r8.xyzw  // ambient<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 78
                dp3 r0.w, r11.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r8.xyz, -r11.xyzx
                dp3 r8.w, r8.xyzx, r0.xyzx
                add r8.w, r8.w, r8.w
                mov r8.w, -r8.w
                mul r0.xyz, r0.xyzx, r8.wwww
                add r0.xyz, r8.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r4.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r3.xyzw, r3.xyzw, r0.wwww
                mul r3.xyzw, r9.xyzw, r3.xyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mul r0.xyzw, r4.xyzw, r0.xxxx
                mul r0.xyzw, r10.xyzw, r0.xyzw  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 82
                movc r3.xyzw, r1.wwww, r3.xyzw, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                movc r0.xyzw, r1.wwww, r0.xyzw, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 153 "C:\Workspace\GitHub\render_demos\RenderEngine2\FX\Billboard.fx"
                mov r2.xyzw, r2.xyzw  // A<0:Inf,1:Inf,2:Inf,3:Inf>
                mov r3.xyzw, r3.xyzw  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r0.xyzw, r0.xyzw  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 156
                add r1.xyzw, r2.xyzw, r5.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r2.xyzw, r3.xyzw, r6.xyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r0.xyzw, r0.xyzw, r7.xyzw  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 162
                add r1.xyzw, r1.xyzw, r2.xyzw
                mul r1.xyzw, r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
                add r0.xyzw, r0.xyzw, r1.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 174
                mov o0.xyzw, r0.xyzw  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                ret 
                // Approximately 114 instruction slots used
                            
            };
        }

    }

    technique11 Light3TexAlphaClip
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // SIZE                     0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // SIZE                     0   xy          1     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_output o0.xyz
                dcl_output o1.xy
                dcl_temps 2
                
                #line 63 "C:\Workspace\GitHub\render_demos\RenderEngine2\FX\Billboard.fx"
                mov r0.xyz, v0.xyzx  // vout<0,1,2>
                mov r1.xy, v1.xyxx  // vout<3,4>
                mov o0.xyz, r0.xyzx  // VS<0,1,2>
                mov o1.xy, r1.xyxx  // VS<3,4>
                ret 
                // Approximately 5 instruction slots used
                            
            };
            GeometryShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192 [unused]
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float gFogColor;                   // Offset:  212 Size:     4 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gViewProj;                // Offset:    0 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:   64
                //       float4 Diffuse;                // Offset:   80
                //       float4 Specular;               // Offset:   96
                //       float4 Reflect;                // Offset:  112
                //
                //   } gMaterial;                       // Offset:   64 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbFixed
                // {
                //
                //   float2 gTexC[4];                   // Offset:    0 Size:    56
                //      = 0x00000000 0x3f800000 0x00000000 0x00000000 
                //        0x00000000 0x00000000 0x00000000 0x00000000 
                //        0x3f800000 0x3f800000 0x00000000 0x00000000 
                //        0x3f800000 0x00000000 
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                // cbFixed                           cbuffer      NA          NA    2        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // SIZE                     0   xy          1     NONE  float   xy  
                // SV_PrimitiveID           0    N/A   primID   PRIMID   uint    YES
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // m0:SV_POSITION           0   xyzw        0      POS  float   xyzw
                // m0:POSITION              0   xyz         1     NONE  float   xyz 
                // m0:NORMAL                0   xyz         2     NONE  float   xyz 
                // m0:TEXCOORD              0   xy          3     NONE  float   xy  
                // m0:SV_PrimitiveID        0   x           4   PRIMID   uint   x   
                //
                gs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[4], immediateIndexed
                dcl_constantbuffer cb2[4], immediateIndexed
                dcl_input v[1][0].xyz
                dcl_input v[1][1].xy
                dcl_input vPrim
                dcl_temps 7
                dcl_inputprimitive point 
                dcl_stream m0
                dcl_outputtopology trianglestrip 
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output_sgv o4.x, primitive_id
                dcl_maxout 4
                
                #line 74 "C:\Workspace\GitHub\render_demos\RenderEngine2\FX\Billboard.fx"
                mov r0.xy, -v[0][0].xzxx
                add r0.xz, r0.xxyx, cb0[12].xxzx  // look<0:Inf,2:Inf>
                mov r0.y, l(0)  // look<1: 0f>
                dp3 r0.w, r0.xyzx, r0.xyzx
                rsq r0.w, r0.w
                mul r0.xyz, r0.wwww, r0.xyzx  // look<0:NaN:Inf,1: 0f,2:NaN:Inf>
                mul r1.xyz, r0.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000)
                mul r2.xyz, r0.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
                mov r2.xyz, -r2.xyzx
                add r1.xyz, r1.xyzx, r2.xyzx  // right<0:NaN:Inf,1: 0f,2:NaN:Inf>
                mul r2.xyz, l(0.500000, 0.500000, 0.500000, 0.000000), v[0][1].xxxx  // halfWidth<0:[-1.70141e+038f,1.70141e+038f],1:[-1.70141e+038f,1.70141e+038f],2:[-1.70141e+038f,1.70141e+038f]>
                mul r3.xyz, l(0.500000, 0.500000, 0.500000, 0.000000), v[0][1].yyyy  // halfHeight<0:[-1.70141e+038f,1.70141e+038f],1:[-1.70141e+038f,1.70141e+038f],2:[-1.70141e+038f,1.70141e+038f]>
                
                #line 86
                mul r1.xyz, r1.xyzx, r2.xyzx
                add r2.xyz, r1.xyzx, v[0][0].xyzx
                mul r3.xyz, r3.xyzx, l(0.000000, 1.000000, 0.000000, 0.000000)
                mov r4.xyz, -r3.xyzx
                add r5.xyz, r2.xyzx, r4.xyzx
                add r2.xyz, r2.xyzx, r3.xyzx
                mov r1.xyz, -r1.xyzx
                add r1.xyz, r1.xyzx, v[0][0].xyzx
                add r4.xyz, r4.xyzx, r1.xyzx
                add r1.xyz, r3.xyzx, r1.xyzx
                
                #line 97
                mov r5.w, l(1.000000)
                dp4 r3.x, r5.xyzw, cb1[0].xyzw  // gout<0:NaN:Inf>
                dp4 r3.y, r5.xyzw, cb1[1].xyzw  // gout<1:NaN:Inf>
                dp4 r3.z, r5.xyzw, cb1[2].xyzw  // gout<2:NaN:Inf>
                dp4 r3.w, r5.xyzw, cb1[3].xyzw  // gout<3:NaN:Inf>
                mov r5.xyz, r3.xyzx  // gout<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov r0.xyz, r0.xyzx  // gout<7:NaN:Inf,8: -0f,9:NaN:Inf>
                mov r6.xy, cb2[0].xyxx  // gout<10,11>
                mov r0.w, vPrim  // gout<12>
                mov o0.xyzw, r3.xyzw  // triStream<0,0,0,0>
                mov o1.xyz, r5.xyzx  // triStream<0,0,0>
                mov o2.xyz, r0.xyzx  // triStream<0,0,0>
                mov o3.xy, r6.xyxx  // triStream<0,0>
                mov o4.x, r0.w  // triStream<0>
                emit_stream m0
                
                #line 97
                mov r2.w, l(1.000000)
                dp4 r3.x, r2.xyzw, cb1[0].xyzw  // gout<0:NaN:Inf>
                dp4 r3.y, r2.xyzw, cb1[1].xyzw  // gout<1:NaN:Inf>
                dp4 r3.z, r2.xyzw, cb1[2].xyzw  // gout<2:NaN:Inf>
                dp4 r3.w, r2.xyzw, cb1[3].xyzw  // gout<3:NaN:Inf>
                mov r2.xyz, r3.xyzx  // gout<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov r5.xy, cb2[1].xyxx  // gout<10,11>
                
                #line 103
                mov o0.xyzw, r3.xyzw  // triStream<0,0,0,0>
                mov o1.xyz, r2.xyzx  // triStream<0,0,0>
                mov o2.xyz, r0.xyzx  // triStream<0,0,0>
                mov o3.xy, r5.xyxx  // triStream<0,0>
                mov o4.x, r0.w  // triStream<0>
                emit_stream m0
                
                #line 97
                mov r4.w, l(1.000000)
                dp4 r2.x, r4.xyzw, cb1[0].xyzw  // gout<0:NaN:Inf>
                dp4 r2.y, r4.xyzw, cb1[1].xyzw  // gout<1:NaN:Inf>
                dp4 r2.z, r4.xyzw, cb1[2].xyzw  // gout<2:NaN:Inf>
                dp4 r2.w, r4.xyzw, cb1[3].xyzw  // gout<3:NaN:Inf>
                mov r3.xyz, r2.xyzx  // gout<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov r4.xy, cb2[2].xyxx  // gout<10,11>
                
                #line 103
                mov o0.xyzw, r2.xyzw  // triStream<0,0,0,0>
                mov o1.xyz, r3.xyzx  // triStream<0,0,0>
                mov o2.xyz, r0.xyzx  // triStream<0,0,0>
                mov o3.xy, r4.xyxx  // triStream<0,0>
                mov o4.x, r0.w  // triStream<0>
                emit_stream m0
                
                #line 97
                mov r1.w, l(1.000000)
                dp4 r2.x, r1.xyzw, cb1[0].xyzw  // gout<0:NaN:Inf>
                dp4 r2.y, r1.xyzw, cb1[1].xyzw  // gout<1:NaN:Inf>
                dp4 r2.z, r1.xyzw, cb1[2].xyzw  // gout<2:NaN:Inf>
                dp4 r2.w, r1.xyzw, cb1[3].xyzw  // gout<3:NaN:Inf>
                mov r1.xyz, r2.xyzx  // gout<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov r3.xy, cb2[3].xyxx  // gout<10,11>
                
                #line 103
                mov o0.xyzw, r2.xyzw  // triStream<0,0,0,0>
                mov o1.xyz, r1.xyzx  // triStream<0,0,0>
                mov o2.xyz, r0.xyzx  // triStream<0,0,0>
                mov o3.xy, r3.xyxx  // triStream<0,0>
                mov o4.x, r0.w  // triStream<0>
                emit_stream m0
                
                #line 70
                ret 
                // Approximately 77 instruction slots used
                            
            };
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float gFogColor;                   // Offset:  212 Size:     4 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gViewProj;                // Offset:    0 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:   64
                //       float4 Diffuse;                // Offset:   80
                //       float4 Specular;               // Offset:   96
                //       float4 Reflect;                // Offset:  112
                //
                //   } gMaterial;                       // Offset:   64 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // linearSampling                    sampler      NA          NA    0        1
                // gTreeMapArray                     texture  float4     2darray    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // SV_PrimitiveID           0   x           4   PRIMID   uint   x   
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[7], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps_sgv v4.x, primitive_id
                dcl_output o0.xyzw
                dcl_temps 14
                
                #line 115 "C:\Workspace\GitHub\render_demos\RenderEngine2\FX\Billboard.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 126
                udiv null, r0.w, v4.x, l(4)
                utof r2.z, r0.w  // uvw<2:[0f,3f]>
                mov r2.xy, v3.xyxx
                sample_indexable(texture2darray)(float,float,float,float) r2.xyzw, r2.xyzx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 133
                add r0.w, r2.w, l(-0.050000)
                lt r0.w, r0.w, l(0.000000)
                and r0.w, r0.w, l(-1)
                discard r0.w
                
                #line 153
                nop 
                mov r3.xyzw, cb1[4].xyzw  // mat<0,1,2,3>
                mov r4.xyzw, cb1[5].xyzw  // mat<4,5,6,7>
                mov r5.xyzw, cb1[6].xyzw  // mat<8,9,10,11>
                mov r6.xyzw, cb0[0].xyzw  // L<0,1,2,3>
                mov r7.xyzw, cb0[1].xyzw  // L<4,5,6,7>
                mov r8.xyzw, cb0[2].xyzw  // L<8,9,10,11>
                mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r6.xyzw, r3.xyzw, r6.xyzw  // ambient<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 78
                dp3 r0.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r9.xyz, -r9.xyzx
                dp3 r9.w, r9.xyzx, r0.xyzx
                add r9.w, r9.w, r9.w
                mov r9.w, -r9.w
                mul r10.xyz, r0.xyzx, r9.wwww
                add r9.xyz, r9.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r9.x, r9.xyzx, r1.xyzx
                max r9.x, r9.x, l(0.000000)
                log r9.x, r9.x
                mul r9.x, r5.w, r9.x
                exp r9.x, r9.x  // specFactor<0:NaN:Inf>
                mul r10.xyzw, r4.xyzw, r0.wwww
                mul r7.xyzw, r7.xyzw, r10.xyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mul r9.xyzw, r5.xyzw, r9.xxxx
                mul r8.xyzw, r8.xyzw, r9.xyzw  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 82
                movc r7.xyzw, r1.wwww, r7.xyzw, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                movc r8.xyzw, r1.wwww, r8.xyzw, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 153 "C:\Workspace\GitHub\render_demos\RenderEngine2\FX\Billboard.fx"
                mov r6.xyzw, r6.xyzw  // A<0:Inf,1:Inf,2:Inf,3:Inf>
                mov r7.xyzw, r7.xyzw  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r8.xyzw, r8.xyzw  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 156
                add r6.xyzw, r6.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf,3:Inf>
                add r7.xyzw, r7.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r8.xyzw, r8.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 153
                nop 
                mov r9.xyzw, cb0[4].xyzw  // L<0,1,2,3>
                mov r10.xyzw, cb0[5].xyzw  // L<4,5,6,7>
                mov r11.xyzw, cb0[6].xyzw  // L<8,9,10,11>
                mov r12.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r9.xyzw, r3.xyzw, r9.xyzw  // ambient<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 78
                dp3 r0.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r12.xyz, -r12.xyzx
                dp3 r12.w, r12.xyzx, r0.xyzx
                add r12.w, r12.w, r12.w
                mov r12.w, -r12.w
                mul r13.xyz, r0.xyzx, r12.wwww
                add r12.xyz, r12.xyzx, r13.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r12.x, r12.xyzx, r1.xyzx
                max r12.x, r12.x, l(0.000000)
                log r12.x, r12.x
                mul r12.x, r5.w, r12.x
                exp r12.x, r12.x  // specFactor<0:NaN:Inf>
                mul r13.xyzw, r4.xyzw, r0.wwww
                mul r10.xyzw, r10.xyzw, r13.xyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mul r12.xyzw, r5.xyzw, r12.xxxx
                mul r11.xyzw, r11.xyzw, r12.xyzw  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 82
                movc r10.xyzw, r1.wwww, r10.xyzw, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                movc r11.xyzw, r1.wwww, r11.xyzw, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 153 "C:\Workspace\GitHub\render_demos\RenderEngine2\FX\Billboard.fx"
                mov r9.xyzw, r9.xyzw  // A<0:Inf,1:Inf,2:Inf,3:Inf>
                mov r10.xyzw, r10.xyzw  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r11.xyzw, r11.xyzw  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 156
                add r6.xyzw, r6.xyzw, r9.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r7.xyzw, r7.xyzw, r10.xyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r8.xyzw, r8.xyzw, r11.xyzw  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 153
                nop 
                mov r9.xyzw, cb0[8].xyzw  // L<0,1,2,3>
                mov r10.xyzw, cb0[9].xyzw  // L<4,5,6,7>
                mov r11.xyzw, cb0[10].xyzw  // L<8,9,10,11>
                mov r12.xyz, cb0[11].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r3.xyzw, r3.xyzw, r9.xyzw  // ambient<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 78
                dp3 r0.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r9.xyz, -r12.xyzx
                dp3 r9.w, r9.xyzx, r0.xyzx
                add r9.w, r9.w, r9.w
                mov r9.w, -r9.w
                mul r0.xyz, r0.xyzx, r9.wwww
                add r0.xyz, r9.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r5.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r4.xyzw, r4.xyzw, r0.wwww
                mul r4.xyzw, r10.xyzw, r4.xyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mul r0.xyzw, r5.xyzw, r0.xxxx
                mul r0.xyzw, r11.xyzw, r0.xyzw  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 82
                movc r4.xyzw, r1.wwww, r4.xyzw, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                movc r0.xyzw, r1.wwww, r0.xyzw, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 153 "C:\Workspace\GitHub\render_demos\RenderEngine2\FX\Billboard.fx"
                mov r3.xyzw, r3.xyzw  // A<0:Inf,1:Inf,2:Inf,3:Inf>
                mov r4.xyzw, r4.xyzw  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r0.xyzw, r0.xyzw  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 156
                add r1.xyzw, r3.xyzw, r6.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r3.xyzw, r4.xyzw, r7.xyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r0.xyzw, r0.xyzw, r8.xyzw  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 162
                add r1.xyzw, r1.xyzw, r3.xyzw
                mul r1.xyzw, r1.xyzw, r2.xyzw
                add r0.xyzw, r0.xyzw, r1.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 174
                mov o0.xyzw, r0.xyzw  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                ret 
                // Approximately 122 instruction slots used
                            
            };
        }

    }

    technique11 Light3TexAlphaClipFog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // SIZE                     0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // SIZE                     0   xy          1     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_output o0.xyz
                dcl_output o1.xy
                dcl_temps 2
                
                #line 63 "C:\Workspace\GitHub\render_demos\RenderEngine2\FX\Billboard.fx"
                mov r0.xyz, v0.xyzx  // vout<0,1,2>
                mov r1.xy, v1.xyxx  // vout<3,4>
                mov o0.xyz, r0.xyzx  // VS<0,1,2>
                mov o1.xy, r1.xyxx  // VS<3,4>
                ret 
                // Approximately 5 instruction slots used
                            
            };
            GeometryShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192 [unused]
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float gFogColor;                   // Offset:  212 Size:     4 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gViewProj;                // Offset:    0 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:   64
                //       float4 Diffuse;                // Offset:   80
                //       float4 Specular;               // Offset:   96
                //       float4 Reflect;                // Offset:  112
                //
                //   } gMaterial;                       // Offset:   64 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbFixed
                // {
                //
                //   float2 gTexC[4];                   // Offset:    0 Size:    56
                //      = 0x00000000 0x3f800000 0x00000000 0x00000000 
                //        0x00000000 0x00000000 0x00000000 0x00000000 
                //        0x3f800000 0x3f800000 0x00000000 0x00000000 
                //        0x3f800000 0x00000000 
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                // cbFixed                           cbuffer      NA          NA    2        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // SIZE                     0   xy          1     NONE  float   xy  
                // SV_PrimitiveID           0    N/A   primID   PRIMID   uint    YES
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // m0:SV_POSITION           0   xyzw        0      POS  float   xyzw
                // m0:POSITION              0   xyz         1     NONE  float   xyz 
                // m0:NORMAL                0   xyz         2     NONE  float   xyz 
                // m0:TEXCOORD              0   xy          3     NONE  float   xy  
                // m0:SV_PrimitiveID        0   x           4   PRIMID   uint   x   
                //
                gs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[4], immediateIndexed
                dcl_constantbuffer cb2[4], immediateIndexed
                dcl_input v[1][0].xyz
                dcl_input v[1][1].xy
                dcl_input vPrim
                dcl_temps 7
                dcl_inputprimitive point 
                dcl_stream m0
                dcl_outputtopology trianglestrip 
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output_sgv o4.x, primitive_id
                dcl_maxout 4
                
                #line 74 "C:\Workspace\GitHub\render_demos\RenderEngine2\FX\Billboard.fx"
                mov r0.xy, -v[0][0].xzxx
                add r0.xz, r0.xxyx, cb0[12].xxzx  // look<0:Inf,2:Inf>
                mov r0.y, l(0)  // look<1: 0f>
                dp3 r0.w, r0.xyzx, r0.xyzx
                rsq r0.w, r0.w
                mul r0.xyz, r0.wwww, r0.xyzx  // look<0:NaN:Inf,1: 0f,2:NaN:Inf>
                mul r1.xyz, r0.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000)
                mul r2.xyz, r0.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
                mov r2.xyz, -r2.xyzx
                add r1.xyz, r1.xyzx, r2.xyzx  // right<0:NaN:Inf,1: 0f,2:NaN:Inf>
                mul r2.xyz, l(0.500000, 0.500000, 0.500000, 0.000000), v[0][1].xxxx  // halfWidth<0:[-1.70141e+038f,1.70141e+038f],1:[-1.70141e+038f,1.70141e+038f],2:[-1.70141e+038f,1.70141e+038f]>
                mul r3.xyz, l(0.500000, 0.500000, 0.500000, 0.000000), v[0][1].yyyy  // halfHeight<0:[-1.70141e+038f,1.70141e+038f],1:[-1.70141e+038f,1.70141e+038f],2:[-1.70141e+038f,1.70141e+038f]>
                
                #line 86
                mul r1.xyz, r1.xyzx, r2.xyzx
                add r2.xyz, r1.xyzx, v[0][0].xyzx
                mul r3.xyz, r3.xyzx, l(0.000000, 1.000000, 0.000000, 0.000000)
                mov r4.xyz, -r3.xyzx
                add r5.xyz, r2.xyzx, r4.xyzx
                add r2.xyz, r2.xyzx, r3.xyzx
                mov r1.xyz, -r1.xyzx
                add r1.xyz, r1.xyzx, v[0][0].xyzx
                add r4.xyz, r4.xyzx, r1.xyzx
                add r1.xyz, r3.xyzx, r1.xyzx
                
                #line 97
                mov r5.w, l(1.000000)
                dp4 r3.x, r5.xyzw, cb1[0].xyzw  // gout<0:NaN:Inf>
                dp4 r3.y, r5.xyzw, cb1[1].xyzw  // gout<1:NaN:Inf>
                dp4 r3.z, r5.xyzw, cb1[2].xyzw  // gout<2:NaN:Inf>
                dp4 r3.w, r5.xyzw, cb1[3].xyzw  // gout<3:NaN:Inf>
                mov r5.xyz, r3.xyzx  // gout<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov r0.xyz, r0.xyzx  // gout<7:NaN:Inf,8: -0f,9:NaN:Inf>
                mov r6.xy, cb2[0].xyxx  // gout<10,11>
                mov r0.w, vPrim  // gout<12>
                mov o0.xyzw, r3.xyzw  // triStream<0,0,0,0>
                mov o1.xyz, r5.xyzx  // triStream<0,0,0>
                mov o2.xyz, r0.xyzx  // triStream<0,0,0>
                mov o3.xy, r6.xyxx  // triStream<0,0>
                mov o4.x, r0.w  // triStream<0>
                emit_stream m0
                
                #line 97
                mov r2.w, l(1.000000)
                dp4 r3.x, r2.xyzw, cb1[0].xyzw  // gout<0:NaN:Inf>
                dp4 r3.y, r2.xyzw, cb1[1].xyzw  // gout<1:NaN:Inf>
                dp4 r3.z, r2.xyzw, cb1[2].xyzw  // gout<2:NaN:Inf>
                dp4 r3.w, r2.xyzw, cb1[3].xyzw  // gout<3:NaN:Inf>
                mov r2.xyz, r3.xyzx  // gout<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov r5.xy, cb2[1].xyxx  // gout<10,11>
                
                #line 103
                mov o0.xyzw, r3.xyzw  // triStream<0,0,0,0>
                mov o1.xyz, r2.xyzx  // triStream<0,0,0>
                mov o2.xyz, r0.xyzx  // triStream<0,0,0>
                mov o3.xy, r5.xyxx  // triStream<0,0>
                mov o4.x, r0.w  // triStream<0>
                emit_stream m0
                
                #line 97
                mov r4.w, l(1.000000)
                dp4 r2.x, r4.xyzw, cb1[0].xyzw  // gout<0:NaN:Inf>
                dp4 r2.y, r4.xyzw, cb1[1].xyzw  // gout<1:NaN:Inf>
                dp4 r2.z, r4.xyzw, cb1[2].xyzw  // gout<2:NaN:Inf>
                dp4 r2.w, r4.xyzw, cb1[3].xyzw  // gout<3:NaN:Inf>
                mov r3.xyz, r2.xyzx  // gout<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov r4.xy, cb2[2].xyxx  // gout<10,11>
                
                #line 103
                mov o0.xyzw, r2.xyzw  // triStream<0,0,0,0>
                mov o1.xyz, r3.xyzx  // triStream<0,0,0>
                mov o2.xyz, r0.xyzx  // triStream<0,0,0>
                mov o3.xy, r4.xyxx  // triStream<0,0>
                mov o4.x, r0.w  // triStream<0>
                emit_stream m0
                
                #line 97
                mov r1.w, l(1.000000)
                dp4 r2.x, r1.xyzw, cb1[0].xyzw  // gout<0:NaN:Inf>
                dp4 r2.y, r1.xyzw, cb1[1].xyzw  // gout<1:NaN:Inf>
                dp4 r2.z, r1.xyzw, cb1[2].xyzw  // gout<2:NaN:Inf>
                dp4 r2.w, r1.xyzw, cb1[3].xyzw  // gout<3:NaN:Inf>
                mov r1.xyz, r2.xyzx  // gout<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov r3.xy, cb2[3].xyxx  // gout<10,11>
                
                #line 103
                mov o0.xyzw, r2.xyzw  // triStream<0,0,0,0>
                mov o1.xyz, r1.xyzx  // triStream<0,0,0>
                mov o2.xyz, r0.xyzx  // triStream<0,0,0>
                mov o3.xy, r3.xyxx  // triStream<0,0>
                mov o4.x, r0.w  // triStream<0>
                emit_stream m0
                
                #line 70
                ret 
                // Approximately 77 instruction slots used
                            
            };
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float gFogColor;                   // Offset:  212 Size:     4
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gViewProj;                // Offset:    0 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:   64
                //       float4 Diffuse;                // Offset:   80
                //       float4 Specular;               // Offset:   96
                //       float4 Reflect;                // Offset:  112
                //
                //   } gMaterial;                       // Offset:   64 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // linearSampling                    sampler      NA          NA    0        1
                // gTreeMapArray                     texture  float4     2darray    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // SV_PrimitiveID           0   x           4   PRIMID   uint   x   
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_constantbuffer cb1[7], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps_sgv v4.x, primitive_id
                dcl_output o0.xyzw
                dcl_temps 14
                
                #line 115 "C:\Workspace\GitHub\render_demos\RenderEngine2\FX\Billboard.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 126
                udiv null, r1.w, v4.x, l(4)
                utof r2.z, r1.w  // uvw<2:[0f,3f]>
                mov r2.xy, v3.xyxx
                sample_indexable(texture2darray)(float,float,float,float) r2.xyzw, r2.xyzx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 133
                add r1.w, r2.w, l(-0.050000)
                lt r1.w, r1.w, l(0.000000)
                and r1.w, r1.w, l(-1)
                discard r1.w
                
                #line 153
                nop 
                mov r3.xyzw, cb1[4].xyzw  // mat<0,1,2,3>
                mov r4.xyzw, cb1[5].xyzw  // mat<4,5,6,7>
                mov r5.xyzw, cb1[6].xyzw  // mat<8,9,10,11>
                mov r6.xyzw, cb0[0].xyzw  // L<0,1,2,3>
                mov r7.xyzw, cb0[1].xyzw  // L<4,5,6,7>
                mov r8.xyzw, cb0[2].xyzw  // L<8,9,10,11>
                mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r6.xyzw, r3.xyzw, r6.xyzw  // ambient<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 78
                dp3 r1.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r9.w, l(0.000000), r1.w
                mov r9.xyz, -r9.xyzx
                dp3 r10.x, r9.xyzx, r0.xyzx
                add r10.x, r10.x, r10.x
                mov r10.x, -r10.x
                mul r10.xyz, r0.xyzx, r10.xxxx
                add r9.xyz, r9.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r9.x, r9.xyzx, r1.xyzx
                max r9.x, r9.x, l(0.000000)
                log r9.x, r9.x
                mul r9.x, r5.w, r9.x
                exp r9.x, r9.x  // specFactor<0:NaN:Inf>
                mul r10.xyzw, r4.xyzw, r1.wwww
                mul r7.xyzw, r7.xyzw, r10.xyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mul r10.xyzw, r5.xyzw, r9.xxxx
                mul r8.xyzw, r8.xyzw, r10.xyzw  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 82
                movc r7.xyzw, r9.wwww, r7.xyzw, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                movc r8.xyzw, r9.wwww, r8.xyzw, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 153 "C:\Workspace\GitHub\render_demos\RenderEngine2\FX\Billboard.fx"
                mov r6.xyzw, r6.xyzw  // A<0:Inf,1:Inf,2:Inf,3:Inf>
                mov r7.xyzw, r7.xyzw  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r8.xyzw, r8.xyzw  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 156
                add r6.xyzw, r6.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf,3:Inf>
                add r7.xyzw, r7.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r8.xyzw, r8.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 153
                nop 
                mov r9.xyzw, cb0[4].xyzw  // L<0,1,2,3>
                mov r10.xyzw, cb0[5].xyzw  // L<4,5,6,7>
                mov r11.xyzw, cb0[6].xyzw  // L<8,9,10,11>
                mov r12.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r9.xyzw, r3.xyzw, r9.xyzw  // ambient<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 78
                dp3 r1.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r12.w, l(0.000000), r1.w
                mov r12.xyz, -r12.xyzx
                dp3 r13.x, r12.xyzx, r0.xyzx
                add r13.x, r13.x, r13.x
                mov r13.x, -r13.x
                mul r13.xyz, r0.xyzx, r13.xxxx
                add r12.xyz, r12.xyzx, r13.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r12.x, r12.xyzx, r1.xyzx
                max r12.x, r12.x, l(0.000000)
                log r12.x, r12.x
                mul r12.x, r5.w, r12.x
                exp r12.x, r12.x  // specFactor<0:NaN:Inf>
                mul r13.xyzw, r4.xyzw, r1.wwww
                mul r10.xyzw, r10.xyzw, r13.xyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mul r13.xyzw, r5.xyzw, r12.xxxx
                mul r11.xyzw, r11.xyzw, r13.xyzw  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 82
                movc r10.xyzw, r12.wwww, r10.xyzw, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                movc r11.xyzw, r12.wwww, r11.xyzw, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 153 "C:\Workspace\GitHub\render_demos\RenderEngine2\FX\Billboard.fx"
                mov r9.xyzw, r9.xyzw  // A<0:Inf,1:Inf,2:Inf,3:Inf>
                mov r10.xyzw, r10.xyzw  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r11.xyzw, r11.xyzw  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 156
                add r6.xyzw, r6.xyzw, r9.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r7.xyzw, r7.xyzw, r10.xyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r8.xyzw, r8.xyzw, r11.xyzw  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 153
                nop 
                mov r9.xyzw, cb0[8].xyzw  // L<0,1,2,3>
                mov r10.xyzw, cb0[9].xyzw  // L<4,5,6,7>
                mov r11.xyzw, cb0[10].xyzw  // L<8,9,10,11>
                mov r12.xyz, cb0[11].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r3.xyzw, r3.xyzw, r9.xyzw  // ambient<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 78
                dp3 r1.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r9.x, l(0.000000), r1.w
                mov r9.yzw, -r12.xxyz
                dp3 r12.x, r9.yzwy, r0.xyzx
                add r12.x, r12.x, r12.x
                mov r12.x, -r12.x
                mul r0.xyz, r0.xyzx, r12.xxxx
                add r0.xyz, r9.yzwy, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r5.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r1.xyzw, r4.xyzw, r1.wwww
                mul r1.xyzw, r10.xyzw, r1.xyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mul r4.xyzw, r5.xyzw, r0.xxxx
                mul r4.xyzw, r11.xyzw, r4.xyzw  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 82
                movc r1.xyzw, r9.xxxx, r1.xyzw, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                movc r4.xyzw, r9.xxxx, r4.xyzw, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 153 "C:\Workspace\GitHub\render_demos\RenderEngine2\FX\Billboard.fx"
                mov r3.xyzw, r3.xyzw  // A<0:Inf,1:Inf,2:Inf,3:Inf>
                mov r1.xyzw, r1.xyzw  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r4.xyzw, r4.xyzw  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 156
                add r3.xyzw, r3.xyzw, r6.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r1.xyzw, r1.xyzw, r7.xyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r4.xyzw, r4.xyzw, r8.xyzw  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 162
                add r1.xyzw, r1.xyzw, r3.xyzw
                mul r1.xyzw, r1.xyzw, r2.xyzw
                add r1.xyzw, r4.xyzw, r1.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 168
                mov r0.x, -cb0[12].w
                add r0.x, r0.x, r0.w
                div r0.x, r0.x, cb0[13].x
                max r0.x, r0.x, l(0.000000)
                min r0.x, r0.x, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 171
                mov r2.xyzw, -r1.xyzw
                add r2.xyzw, r2.xyzw, cb0[13].yyyy
                mul r0.xyzw, r0.xxxx, r2.xyzw
                add r0.xyzw, r0.xyzw, r1.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 174
                mov o0.xyzw, r0.xyzw  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                ret 
                // Approximately 131 instruction slots used
                            
            };
        }

    }

}

